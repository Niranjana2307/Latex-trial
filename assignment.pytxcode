=>PYTHONTEX#py#default#default#0#code#####171#
for i in range(1, 4):
    result = []
    print("\ni  | ", "j  | ", "(i+j)**2 | \n")
    for j in range(1, 4):
        print(i, "|", j, "|", (i + j) ** 2, "|")
        print("\n")
        result.append((i + j) ** 2)
    print("\nSublist for i = {0}: {1}\n".format(i, result))
=>PYTHONTEX#py#default#default#1#code#####256#
sentence = "I am happy"
# Split sentence into words
words_list = sentence.split()
print("Words List:\n", words_list)

# Process each word separately
result = []
for word in words_list:
  char_list=[]
  print("\nword | ","char | ","upper  | ".expandtabs(4))
  for char in word:
    print("\n{0} |   {1}  |   {2}   |  ".format(word, char, char.upper()).expandtabs(4))
    char_list.append(char.upper())  # Convert each char in word to uppercase
  print(f"\nSublist '{word}':", char_list)
=>PYTHONTEX#py#default#default#2#code#####306#
words = [["cat", "elephant"], ["dog", "tiger"], ["fox", "giraffe"]]
result = []
for row in words:
  long_words=[]
  print("\nrow |","word |")
  for word in row:
    if len(word)>3:
          print("\n{0} | {1} |".format(row, word))
          long_words.append(word)
           # Convert each char in word to uppercase
  print(f"\nSublist:{long_words}")

=>PYTHONTEX#py#default#default#3#code#####350#
result = []
for i in range(3):
  list_=[]
  print("\nrow index | ","column index | ", "row |")
  for j in range(4):
      list_.append(0)
      print("\n{0}  |  {1}  |  {2}  |".format(i, j,list_))
  print(f"\nRow:{list_}")

=>PYTHONTEX#py#default#default#4#code#####394#
sentence = "Python Is Amazing"
vowels = "aeiouAEIOU"

# Split sentence into words
words_list = sentence.split()
print("\nWords List:", words_list)

# Process each word separately

for word in words_list:
  char_list=[]
  print("\nword | ","char | ")
  for char in word:
    if char in vowels:
      char_list.append(char)
      print("\n{0} | {1} |".format(word, char))
  print(f"\nSublist: {char_list}")

=>PYTHONTEX#py#default#default#5#code#####447#
result = []
for i in range(5):
  list_=[]
  print("\nrow index | ","column index |", "expression |", "row")
  for j in range(5):
    if (i + j) % 2 == 0:
      list_.append(1)
    else:
      list_.append(0)
    print("\n{0}  |  {1}  |  {2}  |  {3}  |".format(i, j, (i+j)%2 , list_))
  print(f"\nRow:{list_}")


=>PYTHONTEX:SETTINGS#
version=0.18
outputdir=pythontex-files-assignment
workingdir=.
workingdirset=false
gobble=none
rerun=default
hashdependencies=default
makestderr=false
stderrfilename=full
keeptemps=none
pyfuture=default
pyconfuture=none
pygments=true
pygglobal=:GLOBAL||
fvextfile=-1
pyconbanner=none
pyconfilename=stdin
depythontex=false
pygfamily=py|python3|
pygfamily=pycon|pycon|
pygfamily=sympy|python3|
pygfamily=sympycon|pycon|
pygfamily=pylab|python3|
pygfamily=pylabcon|pycon|
